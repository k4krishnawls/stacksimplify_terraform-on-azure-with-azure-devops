pool:
  name: Azure Pipelines
#Your build pipeline references an undefined variable named ‘Parameters.RestoreBuildProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘Parameters.RestoreBuildProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references an undefined variable named ‘Parameters.TestProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

steps:
- powershell: 'choco install dotnetcore-sdk --version=2.0.0'
  displayName: 'Install .net core 2.0.0'

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '$(Parameters.RestoreBuildProjects)'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(Parameters.RestoreBuildProjects)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '$(Parameters.TestProjects)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: CopyFiles@2
  displayName: 'Copy Terraform files to artifacts'
  inputs:
    SourceFolder: Terraform
    TargetFolder: '$(build.artifactstagingdirectory)/Terraform'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'

#Your build pipeline references an undefined variable named ‘Parameters.RestoreBuildProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972'
	
#Your build pipeline references an undefined variable named ‘Parameters.RestoreBuildProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘BuildConfiguration’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

steps:
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(Parameters.RestoreBuildProjects)'
    arguments: '--configuration $(BuildConfiguration)'
	
#Your build pipeline references an undefined variable named ‘Parameters.TestProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘BuildConfiguration’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

steps:
- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '$(Parameters.TestProjects)'
    arguments: '--configuration $(BuildConfiguration)'
	
#Your build pipeline references an undefined variable named ‘BuildConfiguration’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

steps:
- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True
	
steps:
- task: CopyFiles@2
  displayName: 'Copy Terraform files to artifacts'
  inputs:
    SourceFolder: Terraform
    TargetFolder: '$(build.artifactstagingdirectory)/Terraform'
	
steps:
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
	
####CD starts

variables:
  terraformstoragerg: 'terraformrg'
  terraformstorageaccount: 'terraformstorageb321690f'

steps:
- task: AzureCLI@1
  displayName: 'Azure CLI to deploy required Azure resources'
  inputs:
    azureSubscription: 'Pay-As-You-Go (276fb5aa-8f3b-4ca4-a242-a8522d014510)'
    scriptLocation: inlineScript
    inlineScript: |
     # this will create Azure resource group
     call az group create --location westus --name $(terraformstoragerg)
     
     call az storage account create --name $(terraformstorageaccount) --resource-group $(terraformstoragerg) --location westus --sku Standard_LRS
     
     call az storage container create --name terraform --account-name $(terraformstorageaccount)
     
     call az storage account keys list -g $(terraformstoragerg) -n $(terraformstorageaccount)
     
variables:
  terraformstoragerg: 'terraformrg'
  terraformstorageaccount: 'terraformstorageb321690f'

steps:
- task: AzurePowerShell@3
  displayName: 'Azure PowerShell script to get the storage key'
  inputs:
    azureSubscription: 'Pay-As-You-Go (276fb5aa-8f3b-4ca4-a242-a8522d014510)'
    ScriptType: InlineScript
    Inline: |
     # Using this script we will fetch storage key which is required in terraform file to authenticate backend storage account
     
     $key=(Get-AzureRmStorageAccountKey -ResourceGroupName $(terraformstoragerg) -AccountName $(terraformstorageaccount)).Value[0]
     
     Write-Host "##vso[task.setvariable variable=storagekey]$key"
    azurePowerShellVersion: LatestVersion
	
steps:
- task: qetza.replacetokens.replacetokens-task.replacetokens@5
  displayName: 'Replace tokens in terraform file'
  inputs:
    targetFiles: '**/*.tf'
    tokenPattern: custom
    tokenPrefix: '__'
    tokenSuffix: '__'
    escapeType: none
	
steps:
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: 'Install Terraform 0.12.3'
  inputs:
    terraformVersion: 0.12.3
	
steps:
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
  displayName: 'Terraform : init'
  inputs:
    workingDirectory: '$(System.DefaultWorkingDirectory)/_Terraform-CI/drop/Terraform'
    backendServiceArm: 'Pay-As-You-Go (276fb5aa-8f3b-4ca4-a242-a8522d014510)'
    backendAzureRmResourceGroupName: myTFResourceGroup
    backendAzureRmStorageAccountName: tfterraform
    backendAzureRmContainerName: terraform
    backendAzureRmKey: terraform.tfstate

variables:
  terraformstoragerg: 'terraformrg'
  terraformstorageaccount: 'terraformstorageb321690f'
  storagekey: 'PipelineWillGetThisValueRuntime'

steps:
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
  displayName: 'Terraform : plan'
  inputs:
    command: plan
    workingDirectory: '$(System.DefaultWorkingDirectory)/_Terraform-CI/drop/Terraform'
    environmentServiceNameAzureRM: 'Pay-As-You-Go (276fb5aa-8f3b-4ca4-a242-a8522d014510)'
    backendAzureRmResourceGroupName: '$(terraformstoragerg)'
    backendAzureRmStorageAccountName: '$(terraformstorageaccount) '
    backendAzureRmContainerName: terraform
    backendAzureRmKey: '$(storagekey)'
	
variables:
  terraformstoragerg: 'terraformrg'
  terraformstorageaccount: 'terraformstorageb321690f'
  storagekey: 'PipelineWillGetThisValueRuntime'

steps:
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
  displayName: 'Terraform : apply -auto-approve'
  inputs:
    command: apply
    workingDirectory: '$(System.DefaultWorkingDirectory)/_Terraform-CI/drop/Terraform'
    commandOptions: '-auto-approve'
    environmentServiceNameAzureRM: 'Pay-As-You-Go (276fb5aa-8f3b-4ca4-a242-a8522d014510)'
    backendAzureRmResourceGroupName: '$(terraformstoragerg)'
    backendAzureRmStorageAccountName: '$(terraformstorageaccount) '
    backendAzureRmContainerName: terraform
    backendAzureRmKey: '$(storagekey)'
	
variables:
  appservicename: 'pulterraformwebb321690f'

steps:
- task: AzureRmWebAppDeployment@3
  displayName: 'Azure App Service Deploy: $(appservicename)'
  inputs:
    azureSubscription: 'Pay-As-You-Go (276fb5aa-8f3b-4ca4-a242-a8522d014510)'
    WebAppName: '$(appservicename)'